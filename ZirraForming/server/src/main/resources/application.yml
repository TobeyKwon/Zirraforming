spring:
  profiles:
    group:
      local:
        - common
        - local_database
        - port_8080
      development:
        - common
        - development_database
        - port_8080
      production-set1:
        - common
        - production_database
        - port_9001
      production-set2:
        - common
        - production_database
        - port_9002
---
# 스프링 서버 공통 설정
spring:
  profiles:
    active:
      on-profile: common
  # JPA 설정
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true

  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: 676448010615-l92nu3hnd67fhb9l7dovm2euu3c4p9f4.apps.googleusercontent.com
          clientSecret: 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
          scope:
            - email
        facebook:
          clientId: "{페이스북 client-id}"
          clientSecret: "{페이스북 client-secret}"
          scope:
            - email
        naver:
          clientId: 96QOhaKKftnlMuxEBRGT
          clientSecret: YPlSdz6TVv
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - email
          clientName: Naver
        kakao:
          clientId: f5c3e22bfb7f34929bb5b6a4f5d3f318
          clientSecret: Qsmqx8sM5oe1ygclWuNgY8NNv8A5OmX8
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code

  # mongodb 설정
  mongodb:
    host: j7d107.p.ssafy.io
    port: 27017
    database: zirraforming
    username: ssafy
    password: ssafywlfkvhald
    url: mongodb://${spring.mongodb.username}:${spring.mongodb.password}@${spring.mongodb.host}:${spring.mongodb.port}/admin

---
# 개발 DB
spring:
  config:
    activate:
      on-profile: development_database
  datasource:
    #    url: jdbc:mysql://j7d107.p.ssafy.io:3307/zirraforming?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&useLegacyDatetimeCode=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: ssafywlfkvhald

  # Redis 설정
  redis:
    host: j7d107.p.ssafy.io
    port: 6380

  # mongodb 설정
  mongodb:
    host: j7d107.p.ssafy.io
    port: 27018
    database: zirraforming
    username: root
    password: ssafywlfkvhald
    url: mongodb://${spring.mongodb.username}:${spring.mongodb.password}@${spring.mongodb.host}:${spring.mongodb.port}/zirraforming?authSource=admin&authMechanism=SCRAM-SHA-1;

---
# 로컬 DB
spring:
  config:
    activate:
      on-profile: local_database
  datasource:
    url: jdbc:mysql://j7d107.p.ssafy.io:3307/zirraforming?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&useLegacyDatetimeCode=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: ssafywlfkvhald

  # Redis 설정
  redis:
    host: j7d107.p.ssafy.io
    port: 6380

  # mongodb 설정
  mongodb:
    host: j7d107.p.ssafy.io
    port: 27018
    database: zirraforming
    username: root
    password: ssafywlfkvhald
    url: mongodb://${spring.mongodb.username}:${spring.mongodb.password}@${spring.mongodb.host}:${spring.mongodb.port}/zirraforming?authSource=admin&authMechanism=SCRAM-SHA-1;

---
spring:
  config:
    activate:
      on-profile: port_8080

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: port_9001

server:
  port: 9001

---
spring:
  config:
    activate:
      on-profile: port_9002

server:
  port: 9002
