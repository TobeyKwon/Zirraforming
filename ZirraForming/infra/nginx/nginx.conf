server {
    listen 80;
    listen [::]:80;

    server_tokens off;
    server_name j7107.p.ssafy.io;

    underscores_in_headers on;

    include /etc/nginx/conf.d/service-url.inc;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location /ws/socket {
        proxy_pass http://$spring_url;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
#        return 308 https://$host$request_uri;   # http 요청을 https로 리다이렉션
    }
}

server {
    listen 443 ssl;
    server_name j7d107.p.ssafy.io;
    server_tokens off;

    underscores_in_headers on;

    ssl_certificate /etc/letsencrypt/live/j7d107.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/j7d107.p.ssafy.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    include /etc/nginx/conf.d/service-url.inc;

    location / {
	proxy_pass http://$react_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /images {
        root /usr/share/nginx/html;
    }


    location /api {
	proxy_pass http://$spring_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

   location /fastapi {
       proxy_pass http://172.26.8.122:8000;
       proxy_set_header Host $host:$server_port;
       proxy_set_header X-Forwarded-Host $server_name;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   }

    location /utils {
        proxy_pass http://$spring_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    location /oauth {
	proxy_pass http://$spring_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /login {
	proxy_pass http://$spring_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /actuator {
	proxy_pass http://$spring_url;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
